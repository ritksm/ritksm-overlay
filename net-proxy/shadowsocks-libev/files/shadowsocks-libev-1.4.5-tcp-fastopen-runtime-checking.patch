From 5d0696f6551ea2e7f1f6822210eeddebe1fd67f3 Mon Sep 17 00:00:00 2001
From: clowwindy <clowwindy42@gmail.com>
Date: Sat, 3 May 2014 15:39:05 +0800
Subject: [PATCH] use runtime checking instead of compile-time checking for
 TCP_FASTOPEN

---
 src/local.c  |  6 ++++++
 src/server.c | 13 ++++++++++++-
 2 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/src/local.c b/src/local.c
index b7da9b3..60a87e4 100644
--- a/src/local.c
+++ b/src/local.c
@@ -211,6 +211,12 @@ static void server_recv_cb (EV_P_ ev_io *w, int revents)
                 else
                 {
                     ERROR("sendto");
+                    if (errno == ENOTCONN)
+                    {
+                        LOGE("fast open is not supported on this platform");
+                        // just turn it off
+                        fast_open = 0;
+                    }
                     close_and_free_remote(EV_A_ remote);
                     close_and_free_server(EV_A_ server);
                     return;
diff --git a/src/server.c b/src/server.c
index 0ef3e92..8dbe103 100644
--- a/src/server.c
+++ b/src/server.c
@@ -100,7 +100,18 @@ int create_and_bind(const char *host, const char *port)
         if (fast_open)
         {
             opt = 5;
-            setsockopt(listen_sock, SOL_TCP, TCP_FASTOPEN, &opt, sizeof(opt));
+            int r = setsockopt(listen_sock, IPPROTO_TCP, TCP_FASTOPEN, &opt, sizeof(opt));
+            if (r == -1)
+            {
+                if (errno == EPROTONOSUPPORT || errno == ENOPROTOOPT)
+                {
+                    LOGE("fast open is not supported on this platform");
+                }
+                else
+                {
+                    ERROR("setsockopt");
+                }
+            }
         }
 #endif
 
-- 
1.9.3


